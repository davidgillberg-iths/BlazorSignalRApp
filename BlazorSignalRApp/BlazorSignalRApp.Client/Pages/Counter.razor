@page "/counter"
@rendermode InteractiveWebAssembly
@using Microsoft.AspNetCore.SignalR.Client;
@inject NavigationManager NavManager
@implements IAsyncDisposable

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

@code {
    private int currentCount = 0;
    private HubConnection? counterConnection;

    protected override async Task OnInitializedAsync()
    {
        counterConnection = new HubConnectionBuilder()
            .WithUrl(NavManager.ToAbsoluteUri("/counterhub"))
            .WithAutomaticReconnect()
            .Build();

        counterConnection.On<int>("CounterIncremented", (value) =>
        {
            currentCount += value;
            InvokeAsync(StateHasChanged);
        });

        await counterConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (counterConnection is not null)
        {
            await counterConnection.DisposeAsync();
        }
    }

}
